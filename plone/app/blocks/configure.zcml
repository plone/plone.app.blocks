<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    xmlns:meta="http://namespaces.zope.org/meta"
    i18n_domain="plone">

    <include package="plone.behavior" file="meta.zcml" />
    <include package="plone.resource" file="meta.zcml" />

    <include package="plone.resource" />
    <include package="plone.tiles" />
    <include package="plone.subrequest" />
    <include package="plone.transformchain" />
    <include package="plone.jsonserializer" />

    <include package="plone.app.registry" />

    <permission
        id="plone.ManageSiteLayouts"
        title="Plone: Manage Site Layouts"
        />
    <permission
        id="plone.ManageContentLayouts"
        title="Plone: Manage Content Layouts"
        />
    <permission
        id="plone.CustomizeContentLayouts"
        title="Plone: Customize Content Layouts"
        />

    <genericsetup:registerProfile
        name="default"
        title="Blocks rendering engine"
        description="Installs transformation steps to apply the Blocks rendering algorithm for Plone pages."
        directory="profiles/default"
        for="Products.CMFPlone.interfaces.IPloneSiteRoot"
        provides="Products.GenericSetup.interfaces.EXTENSION"
        />

    <genericsetup:importStep
        name="plone.app.blocks_default"
        title="Blocks rendering engine setup"
        description="Initializes registry values for default site layouts"
        handler=".setuphandlers.step_setup_various"
        />

    <!-- Register the layout adapter and behavior -->
    <adapter
        factory=".layoutbehavior.LayoutAwareDefault"
        />
    <plone:behavior
        name="plone.layoutaware"
        title="Layout support"
        description="Adds layout support to your content type"
        provides=".layoutbehavior.ILayoutAware"
        marker=".layoutbehavior.ILayoutBehaviorAdaptable"
        factory=".layoutbehavior.LayoutAwareBehavior"
        />
    <adapter
        factory=".layoutbehavior.layoutAwareTileDataStorage"
        />
    <adapter
        for=".layoutbehavior.ILayoutBehaviorAdaptable
             * plone.tiles.interfaces.IPersistentTile"
        factory="plone.tiles.data.defaultPersistentTileDataStorage"
        />
    <adapter
        name="plone.app.blocks.layoutbehavior"
        factory=".drafting.LayoutAwareDataStorageSyncher"
        zcml:condition="installed plone.app.drafts"
        />

    <!-- Register the default views for the layout behavior -->
    <browser:page
        for=".layoutbehavior.ILayoutBehaviorAdaptable"
        name="tile_layout_view"
        class=".layoutviews.TileLayoutView"
        permission="cmf.ModifyPortalContent"
        />
    <browser:page
        for=".layoutbehavior.ILayoutBehaviorAdaptable"
        name="layout_view"
        class=".layoutviews.ContentLayoutView"
        permission="zope2.View"
        />
    <browser:page
        for=".layoutbehavior.ILayoutBehaviorAdaptable"
        name="layout_preview"
        class=".layoutviews.ContentLayoutPreview"
        permission="cmf.ModifyPortalContent"
        zcml:condition="installed plone.app.drafts"
        />

    <!-- Register the resource traverser -->
    <adapter
        name="sitelayout"
        for="* zope.publisher.interfaces.IRequest"
        provides="zope.traversing.interfaces.ITraversable"
        factory=".resource.SiteLayoutTraverser"
        />

    <!-- Register resource traverser for content layouts -->
    <adapter
        name="contentlayout"
        for="* zope.publisher.interfaces.IRequest"
        provides="zope.traversing.interfaces.ITraversable"
        factory=".resource.ContentLayoutTraverser"
        />

    <!-- Register vocabulary -->
    <utility
        component=".resource.AvailableSiteLayoutsVocabularyFactory"
        name="plone.availableSiteLayouts"
        />

    <!-- Register vocabulary all available content layouts-->
    <utility
        component=".resource.AvailableContentLayoutsVocabularyFactory"
        name="plone.availableContentLayouts"
        />

    <!-- Cache invalidation when global site layout changes -->
    <subscriber
        handler=".resource.globalSiteLayoutModified"
        />

    <!-- Register indirection views for looking up the layout -->
    <browser:view
        name="default-site-layout"
        for="*"
        permission="zope.Public"
        class=".resource.DefaultSiteLayout"
        />

    <browser:view
        name="page-site-layout"
        for="*"
        permission="zope.Public"
        class=".resource.PageSiteLayout"
        />

    <!-- The transform pipeline -->

    <!-- 8000: Turn the response into an lxml tree for further manipulation -->
    <adapter
        for="* .interfaces.IBlocksTransformEnabled"
        name="plone.app.blocks.parsexml"
        factory=".transform.ParseXML"
        />

    <adapter
        for=".interfaces.IBlocksTransformEnabled .interfaces.IBlocksLayer"
        name="plone.app.blocks.parsexml"
        factory=".transform.ParseXML"
        />

    <!-- 8100: Locate the site layout and merge panels -->
    <adapter
        for="* .interfaces.IBlocksTransformEnabled"
        name="plone.app.blocks.mergepanels"
        factory=".transform.MergePanels"
        />

    <adapter
        for=".interfaces.IBlocksTransformEnabled .interfaces.IBlocksLayer"
        name="plone.app.blocks.mergepanels"
        factory=".transform.MergePanels"
        />

    <!-- 8500: Finds and includes tiles in the output -->
    <adapter
        for="* .interfaces.IBlocksTransformEnabled"
        name="plone.app.blocks.tiles"
        factory=".transform.IncludeTiles"
        />

    <adapter
        for=".interfaces.IBlocksTransformEnabled .interfaces.IBlocksLayer"
        name="plone.app.blocks.tiles"
        factory=".transform.IncludeTiles"
        />

    <!-- 9900: ESI post-processing if required -->
    <adapter
        for="* .interfaces.IBlocksTransformEnabled"
        name="plone.app.blocks.esirender"
        factory=".transform.ESIRender"
        />

    <adapter
        for=".interfaces.IBlocksTransformEnabled .interfaces.IBlocksLayer"
        name="plone.app.blocks.esirender"
        factory=".transform.ESIRender"
        />

    <!-- 8000: Off switch for ESI tiles -->
    <adapter
        for="plone.tiles.esi.ESIHead .interfaces.IBlocksLayer"
        name="plone.app.blocks.parsexml"
        factory=".transform.DisableParsing"
        />

    <adapter
        for="plone.tiles.esi.ESIBody .interfaces.IBlocksLayer"
        name="plone.app.blocks.parsexml"
        factory=".transform.DisableParsing"
        />

    <subscriber
        for=".layoutbehavior.ILayoutAware
             zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".subscribers.onLayoutEdited" />

    <meta:provides feature="textindexer"
       zcml:condition="installed plone.app.dexterity.textindexer"
    />

    <meta:provides feature="textindexer"
       zcml:condition="installed collective.dexteritytextindexer"
    />

    <adapter
        name="SearchableText"
        factory=".indexing.LayoutSearchableText"
        zcml:condition="not-have textindexer"
        />

    <adapter
        name="content"
        factory=".indexing.LayoutSearchableTextIndexExtender"
        zcml:condition="installed collective.dexteritytextindexer"
        />

    <adapter factory=".linkintegrity.BlocksDXGeneral" />
    <adapter factory=".linkintegrity.TileGeneral" />

</configure>
